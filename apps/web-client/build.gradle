// web-clientはJavaScript/TypeScriptプロジェクトのため、
// Javaビルドは不要。SonarQubeからも除外。

// このファイルはGradleマルチプロジェクト構成のために存在するが、
// 実際のビルドはnpm/Viteによって行われる。

apply plugin: 'base'

description = 'Rush Hour Railway Simulation - Web Client'

// SonarQube設定はルートbuild.gradleで統合管理される

// npmタスクを定義（オプション）
task npmInstall(type: Exec) {
    commandLine 'npm', 'install'
    workingDir file('.')
}

task npmBuild(type: Exec) {
    dependsOn npmInstall
    commandLine 'npm', 'run', 'build'
    workingDir file('.')
}

task npmTest(type: Exec) {
    dependsOn npmInstall
    commandLine 'npm', 'run', 'test'
    workingDir file('.')
}

task npmLint(type: Exec) {
    dependsOn npmInstall
    commandLine 'npm', 'run', 'lint'
    workingDir file('.')
}

// ESLintレポート生成タスク
task generateESLintReport(type: Exec) {
    dependsOn npmInstall
    doFirst {
        file('build/reports').mkdirs()
    }
    commandLine 'npx', 'eslint', 'src', '--format', 'json', '--output-file', 'build/reports/eslint-report.json'
    workingDir file('.')
    ignoreExitValue true // ESLintエラーがあってもタスクを続行
}

// カバレッジレポート生成タスク
task generateCoverageReport(type: Exec) {
    dependsOn npmInstall
    commandLine 'npm', 'run', 'test:ci'
    workingDir file('.')
}

// Gradleタスクの統合
check.dependsOn npmTest, npmLint, generateESLintReport, generateCoverageReport
build.dependsOn npmBuild

// Gradle統合 - ルートbuild.gradleで依存関係が管理される
