plugins {
    id 'org.springframework.boot'
    id 'com.google.protobuf'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Database
	runtimeOnly 'com.h2database:h2' // For development/testing
	runtimeOnly 'org.postgresql:postgresql' // For production

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	// MapStruct for mapping
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	// gRPC
	implementation "io.grpc:grpc-netty-shaded:1.58.0"
	implementation "io.grpc:grpc-protobuf:1.58.0"
	implementation "io.grpc:grpc-stub:1.58.0"

    implementation project(':packages:shared-models')
}

sourceSets {
    main {
        proto {
            srcDir '../proto'
        }
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.25.1"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.58.0"
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                grpc {}
            }
        }
    }
}

tasks.named('test') {
	useJUnitPlatform()
}
